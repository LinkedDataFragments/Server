#!/usr/bin/env node
/*! @license MIT Â©2013-2016 Ruben Verborgh, Ghent University - imec */
/* Standalone Linked Data Fragments Server */

var _ = require('lodash'),
    fs = require('fs'),
    path = require('path'),
    startCLI = require('../lib/abstractCLI');

var args = process.argv.slice(2);

if (args.length === 0) {
  console.error('At least provide one data source.');
  process.exit(1);
}

// Parse arguments
var config = JSON.parse(fs.readFileSync(path.join(__dirname, '../config/config-defaults.json')));
config.datasources = getDatasources(args);

startCLI(config, console);

/**
 * This method returns an array of data sources based on an array of filenames.
 * @param dataSources an array of data sources
 */
function getDatasources(dataSources) {
  var ldfDatasources = {};
  _.each(dataSources, function (datasource) {
    var details = path.parse(datasource);
    var extension = details.ext;
    var filename = details.name;
    var type = 'TurtleDatasource';

    switch (extension) {
    case '.hdt':
      type = 'HdtDatasource';
      break;
    case '.jsonld':
      type = 'JsonLdDatasource';
      break;
    }

    ldfDatasources[filename] = {
      title: filename,
      type: type,
      description: 'Using file at ' + datasource,
      settings: { file: datasource } };
  });

  return ldfDatasources;
}
